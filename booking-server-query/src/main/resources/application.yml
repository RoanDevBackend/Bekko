spring:
  application:
    name: booking-server-query
  elasticsearch:
    username: ${elastic.username}
    password: ${elastic.password}
    uris: ${elastic.uris}
  data:
    elasticsearch:
      repositories:
        enabled: true
  kafka:
    bootstrap-servers: ${kafka.server}
#    security:
#      protocol: "SSL"
#    ssl:
#      trust-store-location: classpath:client.truststore.jks
#      trust-store-password: ${kafka.password}
#      key-store-location: classpath:client.keystore.p12
#      key-store-password: ${kafka.password}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: group-1
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
server:
  port: 8081
  error:
    include-message: always

logging:
  level:
    root: error