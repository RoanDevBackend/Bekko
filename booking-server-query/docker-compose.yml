#version: '3.8'

services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@localhost:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092, PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/var/lib/kafka

  redis:
    image: redis:latest
    container_name: redis
    command: [ "redis-server", "--requirepass", "root_admin" ]
    environment:
      REDIS_PASSWORD: root_admin
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  #    build:
  #      context: .
  #      dockerfile: Dockerfile
  #    image: roanvanquyen/booking-care-command:1.0.0
  #    platform: linux/arm64/v8

  app:
    build:
      context: ..
      dockerfile: booking-server-query/Dockerfile
    platform: linux/amd64
    container_name: booking-care-query
    depends_on:
      - kafka
      - redis
    restart: on-failure
    ports:
      - "8082:8080"
    environment:
      SPRING_URL: http://localhost:8082
      SPRING_KAFKA_PORT: kafka:9092
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: root_admin
volumes:
  kafka_data:
  redis_data: